#include <Wire.h>
#include <Tiny4kOLED.h>

const byte LED_RUN   = 1;
const byte BTN_START = 4;
const byte BTN_RESET = 3;

volatile uint32_t msElapsed = 0;
bool running = false;

void setup() {
  pinMode(LED_RUN, OUTPUT);
  pinMode(BTN_START, INPUT_PULLUP);
  pinMode(BTN_RESET, INPUT_PULLUP);

  oled.begin(128, 64,
             sizeof(tiny4koled_init_128x64),
             tiny4koled_init_128x64);
  oled.setPages(8);
  oled.clear();
  oled.setFontX2(FONT8X16P);
  oled.on();

  oled.setCursor(24, 2);
  oled.print(F("00:00"));
}

void loop() {
  static bool prevS = HIGH, prevR = HIGH;
  bool s = digitalRead(BTN_START);
  bool r = digitalRead(BTN_RESET);

  if (prevS && !s) running = !running;
  prevS = s;

  if (prevR && !r && !running) msElapsed = 0;
  prevR = r;

  static uint32_t tPrev = 0;
  uint32_t now = millis();
  if (running) msElapsed += now - tPrev;
  tPrev = now;

  static uint16_t prevShownSec = 0xFFFF;
  uint32_t totalSec = msElapsed / 1000;
  if (totalSec != prevShownSec) {
    prevShownSec = totalSec;

    uint8_t sec = totalSec % 60;
    uint8_t min = (totalSec / 60) % 100;

    char buf[6];
    snprintf(buf, sizeof(buf), "%02u:%02u", min, sec);

    oled.setCursor(24, 2);
    oled.print(buf);
  }

  static uint32_t tBlink = 0;
  if (running && now - tBlink >= 250) {
    tBlink = now;
    digitalWrite(LED_RUN, !digitalRead(LED_RUN));
  } else if (!running) {
    digitalWrite(LED_RUN, LOW);
  }
}
